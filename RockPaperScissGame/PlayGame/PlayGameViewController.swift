//
//  PlayGameViewController.swift
//  RockPaperScissGame
//
//  Created by Athapong.Kor on 6/7/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol PlayGameViewControllerInput {
    
}

protocol PlayGameViewControllerOutput {
    func play(request: PlayGameScene.validationResult.Request)
    func getResult()
}

class PlayGameViewController: UIViewController, PlayGameViewControllerInput {
    
    @IBOutlet weak var resultBtn: UIButton!
    @IBOutlet weak var compPlay: UILabel!
    
    var output: PlayGameViewControllerOutput?
    var router: PlayGameRouter?
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        PlayGameConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        resultBtn.isEnabled = false
    }
    
    // MARK: Requests
    
    
    // MARK: Display logic
    
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension PlayGameViewController {
    
}

extension PlayGameViewController: PlayGamePresenterOutput {
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}

extension PlayGameViewController {
    @IBAction func playButton(_ sender: UIButton) {
        let request = PlayGameScene.validationResult.Request(playerResult: sender.tag)
        output?.play(request: request)
    }
    
    @IBAction func resultButton(_ sender: UIButton) {
        resultBtn.isEnabled = false
        router?.showResult()
    }
}

extension PlayGameViewController {
    func showCompPlay(viewModel: PlayGameScene.validationResult.viewModel) {
        compPlay.text = viewModel.computerPlay
    }
    
    func showResult() {
        resultBtn.isEnabled = true
    }
}
